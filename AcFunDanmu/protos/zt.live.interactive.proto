syntax = "proto3";

package AcFunDanmu;

message ZtLiveCsCmd {
	string cmdType = 1;
	bytes payload = 2;
	string ticket = 3;
	string liveId = 4;
}

message ZtLiveCsCmdAck {
	string cmdAckType = 1;
	int64 errorCode = 2;
	string errorMsg = 3;
	bytes payload =4;
}

message ZtLiveCsEnterRoom {
	bool isAuthor = 1;
	int32 reconnectCount = 2;
	int32 lastErrorCode = 3;
	string enterRoomAttach = 4;
	string clientLiveSdkVersion =5;
}

message ZtLiveCsEnterRoomAck {
	int64 heartbeatIntervalMs = 1;
}

message ZtLiveCsUserExit {}

message ZtLiveCsUserExitAck {}

message ZtLiveCsHeartbeat {
	int64 clientTimestampMs = 1;
	int64 sequence = 2;
}

message ZtLiveCsHeartbeatAck {
	int64 serverTimestampMs = 1;
	int64 clientTimestampMs = 2;
	int64 clientSequence = 3;
}

message ZtLiveScMessage {
	string messageType = 1;
	CompressionType compressionType = 2;
	bytes payload = 3;
	string liveId = 4;
	string ticket = 5;
	int64 serverTimestampMs = 6;

	enum CompressionType {
		UNKNOWN = 0;
		NONE = 1;
		GZIP = 2;
	}
}

message ZtLiveActionSignalItem {
	string singalType = 1;
	repeated bytes payload = 2;
}

message ZtLiveScActionSignal {
	repeated ZtLiveActionSignalItem item = 1;
}

message ZtLiveStateSignalItem {
	string singalType = 1;
	bytes payload = 2;
}

message ZtLiveScStateSignal {
	repeated ZtLiveStateSignalItem item = 1;
}

message ZtLiveNotifySignalItem {
	string signalType = 1;
	bytes payload = 2;
}

message ZtLiveScNotifySignal {
	repeated ZtLiveNotifySignalItem item = 1;
}

message ZtLiveScStatusChanged {
	Type type = 1;
	int64 maxRandomDelayMs = 2;
	BannedInfo bannedInfo = 3;

	enum Type {
		UNKNOWN = 0;
		LIVE_CLOSED = 1;
		LIVE_REOPENED = 2;
		LIVE_URL_CHANGED = 3;
		LIVE_BANNED = 4;
	}

	message BannedInfo {
		string banReason = 1;
	}
}

message ZtLiveScTicketInvalid {}

message ZtLiveUserIdentity {
	ManagerType managerType = 1;

	enum ManagerType {
		UNKNOWN_MANAGER_TYPE = 0;
		NORMAL = 1;
	}
}

message ZtLiveUserInfo {
	int64 userId = 1;
	string nickname = 2;
	repeated ImageCdnNode avatar = 3;
	string badge = 4;  // bizCustomInfo
    ZtLiveUserIdentity userIdentity = 5;
}

message ImageCdnNode {
	string cdn = 1;
	string url = 2;
	string urlPattern = 3;
}

enum ChatMediaType {
	UNKNOWN = 0;
	AUDIO = 1;
	VIDEO = 2;
}

message CommonActionSignalComment {
	string content = 1;
	int64 sendTimeMs = 2;
	ZtLiveUserInfo userInfo = 3;
}

message CommonActionSignalLike {
	ZtLiveUserInfo userInfo = 1;
	int64 sendTimeMs = 2;
}

message CommonActionSignalUserEnterRoom {
	ZtLiveUserInfo userInfo = 1;
	int64 sendTimeMs = 2;
}

message CommonActionSignalUserFollowAuthor {
	ZtLiveUserInfo userInfo = 1;
	int64 sendTimeMs = 2;
}

message CommonActionSignalGift {
	ZtLiveUserInfo user = 1;
	int64 sendTimeMs = 2;
	int32 giftId = 3;
	int32 count = 4;  //batchSize
	int32 combo = 5;  //comboCount
	int32 value = 6;  //rank
	string comboId = 7;
	int32 slotDisplayDurationMs = 8;
	int32 expireDurationMs = 9;
	ZtDrawGiftInfo drawGiftInfo = 10;
}

message CommonNotifySignalKickedOut {
	string reason = 1;
}

message CommonNotifySignalViolationAlert {
	string violationContent = 1;
}

message CommonStateSignalDisplayInfo {
	string watchingCount = 1;
	string likeCount = 2;
	int32 likeDelta = 3;
}

message CommonStateSignalTopUsers {
	repeated TopUser user = 1;
	
	message TopUser {
		ZtLiveUserInfo userInfo = 1;
		string customWatchingListData = 2;
		string displaySendAmount = 3;
		bool anonymousUser = 4;
	}
}

message CommonStateSignalRecentComment {
	repeated CommonActionSignalComment comment = 1;
}

enum CsAckErrorCode {
	SUCCESS_CS_ACK = 0;
	LIVE_CLOSED = 1;
	TICKET_ILLEGAL = 2;
	ATTACH_ILLEGAL =3;
	USER_NOT_IN_ROOM = 4;
	SERVER_ERROR = 5;
	REQUEST_PARAM_INVALID = 6;
	ROOM_NOT_EXIST_IN_STATE_MANAGER = 7;
}

enum ZtLiveDownstreamPayloadErrorCode {
	SUCCESS_DOWNSTREAM_PAYLOAD = 0;
	CS_CMD_PARSE_ERROR = 100001;
	CS_CMD_CMD_NOT_SUPPORT = 100002;
	CS_CMD_TICKET_ILLEGAL = 100003;
}

message CommonStateSignalChatCall{
	string chatId = 1;
	string liveId = 2;
	int64 callTimestampMs = 3;
}

message CommonStateSignalChatAccept {
	string chatId = 1;
	ChatMediaType mediaType = 2;
	string arraySignalInfo = 3;
}

message CommonStateSignalChatReady {
	string chatId = 1;
	ZtLiveUserInfo guestUserInfo = 2;
	int32 mediaType = 3;
}

message CommonStateSignalChatEnd {
	string chatId = 1;
	EndType endType = 2;

	enum EndType {
		UNKNOWN = 0;
		CANCEL_BY_AUTHOR = 1;
		END_BY_AUTHOR = 2;
		END_BY_GUEST = 3;
		GUEST_REJECT = 4;
		GUEST_TIMEOUT = 5;
		GUEST_HEARTBEAT_TIMEOUT = 6;
		AUTHOR_HEARTBEAT_TIMEOUT = 7;
	}
}

message CommonActionSignalRichText {
	repeated RichTextSegment segments = 1;
	int64 sendTimeMs = 2;

	message ImageSegment {
		repeated ImageCdnNode pictures = 1; //cdnNode
		string alternativeText = 2;
		string alternativeCOlor = 3;
	}
	message PlainSegment {
		string text = 1;
		string color = 2;
	}
	message RichTextSegment {
		oneof segment {
			UserInfoSegment userInfo = 1;
			PlainSegment plain = 2;
			ImageSegment image = 3;
		}
	}
	message UserInfoSegment {
		ZtLiveUserInfo user = 1;
		string color = 2;
	}
}

message CommonStateSignalCurrentRedpackList {
	repeated Redpack redpacks = 1;

	enum RedpackDisplayStatus {
		SHOW = 0;
		GET_TOKEN = 1;
		GRAB = 2;
	}

	message Redpack {
		ZtLiveUserInfo sender = 1;
		RedpackDisplayStatus displayStatus = 2;
		int64 grabBeginTimeMs = 3;
		int64 getTokenLatestTimeMs = 4;
		string redPackId = 5;
		string redpackBizUnit = 6;
		int64 redpackAmount = 7;
		int64 rsettleBeginTime = 8;
	}
}

message CommonStateSignalFeatureStateSync {
	repeated LiveFeatureState featureState = 1;
}

message LiveFeatureState {
	FeatureType type = 1;
	FeatureState state = 2;

	enum FeatureType {
		FEATURE_UNKNOWN = 0;
		LANDSCAPE_COMMENT = 1;
	}

	enum FeatureState {
		FEATURE_STATE_UNKNOWN = 0;
		FEATURE_STATE_OPEND = 1;
		FEATURE_STATE_CLOSED = 2;
	}
}

message ZtDrawGiftInfo {
	int64 screenWidth = 1;
	int64 screenHeight = 2;
	repeated ZtDrawPoint drawPoint = 3;

	message ZtDrawPoint {
		int64 marginLeft = 1;
		int64 marginTop = 2;
		double scaleRatio = 3;
		bool handup = 4;
	}
}

message CommonNotifySignalCoverAuditResult {
	AuditStatus auditStatus = 1;

	enum AuditStatus {
		SUCCESS = 0;
		COVER_AUDIT_FAILED = 1;
		CAPTION_AUDIT_FAILED = 2;
		BOTH_FAILED = 3;
	}
}

message CommonNotifySignalLiveManagerState {
	ManagerState state = 1;

	enum ManagerState {
		MANAGER_STATE_UNKNOWN = 0;
		MANAGER_ADDED = 1;
		MANAGER_REMOVED = 2;
		IS_MANAGER = 3;
	}
}